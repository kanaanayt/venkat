// <auto-generated />
using System;
using EMS.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EMS.Api.Migrations
{
    [DbContext(typeof(CompanyDbContext))]
    [Migration("20240416114713_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("EMS.Core.eDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentName = "HR"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentName = "IT"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentName = "Admin"
                        });
                });

            modelBuilder.Entity("EMS.Core.eEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            Email = "johnsmith@gmail.com",
                            FirstName = "Harry",
                            Gender = 0,
                            JoinDate = new DateTime(2020, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Smith",
                            PhotoPath = "images/harry.png"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 2,
                            Email = "marysutherland@gmail.com",
                            FirstName = "Mary",
                            Gender = 1,
                            JoinDate = new DateTime(2022, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Sutherland",
                            PhotoPath = "images/mary.png"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 3,
                            Email = "samfallon@gmail.com",
                            FirstName = "Sam",
                            Gender = 2,
                            JoinDate = new DateTime(2023, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Fallon",
                            PhotoPath = "images/sam.png"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 3,
                            Email = "finharrington@gmail.com",
                            FirstName = "Fin",
                            Gender = 0,
                            JoinDate = new DateTime(2019, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Harrington",
                            PhotoPath = "images/harry.png"
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 2,
                            Email = "maxsnipe@gmail.com",
                            FirstName = "Max",
                            Gender = 0,
                            JoinDate = new DateTime(2017, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Snipe",
                            PhotoPath = "images/max.png"
                        },
                        new
                        {
                            Id = 6,
                            DepartmentId = 1,
                            Email = "wesleykemp@gmail.com",
                            FirstName = "Wesley",
                            Gender = 0,
                            JoinDate = new DateTime(2015, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Kemp",
                            PhotoPath = "images/wesley.png"
                        });
                });

            modelBuilder.Entity("EMS.Core.eEmployee", b =>
                {
                    b.HasOne("EMS.Core.eDepartment", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EMS.Core.eDepartment", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
